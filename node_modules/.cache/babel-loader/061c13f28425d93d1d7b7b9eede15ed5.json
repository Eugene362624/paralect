{"ast":null,"code":"import axios from \"axios\";\nimport { REPOS_INFO_FAIL, REPOS_INFO_REQUEST, REPOS_INFO_SUCCESS, USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\";\n\nconst infoUser = userName => async dispatch => {\n  try {\n    dispatch({\n      type: USER_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.github.com/users/${userName}`);\n    console.log(data);\n    dispatch({\n      type: USER_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_INFO_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst infoRepos = (userName, page) => async dispatch => {\n  try {\n    dispatch({\n      type: REPOS_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.github.com/users/${userName}/repos?per_page=4&page=${page}`);\n    console.log(data);\n    dispatch({\n      type: REPOS_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: REPOS_INFO_FAIL,\n      payload: error\n    });\n  }\n};\n\nexport { infoUser, infoRepos };","map":{"version":3,"sources":["D:/mywork/paralect/2021/src/actions/userActons.js"],"names":["axios","REPOS_INFO_FAIL","REPOS_INFO_REQUEST","REPOS_INFO_SUCCESS","USER_INFO_FAIL","USER_INFO_REQUEST","USER_INFO_SUCCESS","infoUser","userName","dispatch","type","data","get","console","log","payload","error","infoRepos","page"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,cAAlE,EAAkFC,iBAAlF,EAAqGC,iBAArG,QAA8H,uBAA9H;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAE/C,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAR;AACA,UAAM;AAACM,MAAAA;AAAD,QAAS,MAAMX,KAAK,CAACY,GAAN,CAAW,gCAA+BJ,QAAS,EAAnD,CAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,iBAAP;AAA0BS,MAAAA,OAAO,EAAEJ;AAAnC,KAAD,CAAR;AACH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,cAAP;AAAuBW,MAAAA,OAAO,EAAEC;AAAhC,KAAD,CAAR;AACH;AACJ,CAVD;;AAaA,MAAMC,SAAS,GAAG,CAACT,QAAD,EAAWU,IAAX,KAAoB,MAAOT,QAAP,IAAoB;AACtD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACA,UAAM;AAACS,MAAAA;AAAD,QAAS,MAAMX,KAAK,CAACY,GAAN,CAAW,gCAA+BJ,QAAS,0BAAyBU,IAAK,EAAjF,CAArB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,kBAAP;AAA2BY,MAAAA,OAAO,EAAEJ;AAApC,KAAD,CAAR;AACH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,eAAP;AAAwBc,MAAAA,OAAO,EAAEC;AAAjC,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,SAAQT,QAAR,EAAkBU,SAAlB","sourcesContent":["import axios from \"axios\"\r\nimport { REPOS_INFO_FAIL, REPOS_INFO_REQUEST, REPOS_INFO_SUCCESS, USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\"\r\n\r\nconst infoUser = (userName) => async (dispatch) => {\r\n    \r\n    try {\r\n        dispatch({type: USER_INFO_REQUEST})\r\n        const {data} = await axios.get(`https://api.github.com/users/${userName}`)\r\n        console.log(data)\r\n        dispatch({type: USER_INFO_SUCCESS, payload: data})\r\n    } catch (error) {\r\n        dispatch({type: USER_INFO_FAIL, payload: error})\r\n    }\r\n} \r\n\r\n\r\nconst infoRepos = (userName, page) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: REPOS_INFO_REQUEST})\r\n        const {data} = await axios.get(`https://api.github.com/users/${userName}/repos?per_page=4&page=${page}`)\r\n        console.log(data)\r\n        dispatch({type: REPOS_INFO_SUCCESS, payload: data})\r\n    } catch (error) {\r\n        dispatch({type: REPOS_INFO_FAIL, payload: error})\r\n    }\r\n}\r\n\r\nexport {infoUser, infoRepos}"]},"metadata":{},"sourceType":"module"}