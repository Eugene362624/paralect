{"ast":null,"code":"import axios from \"axios\";\nimport { USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\";\n\nconst infoUser = userName => async dispatch => {\n  try {\n    console.log(userName);\n    dispatch({\n      type: USER_INFO_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.github.com/users/${userName}`);\n    console.log(data);\n    dispatch({\n      type: USER_INFO_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(11);\n    dispatch({\n      type: USER_INFO_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { infoUser };","map":{"version":3,"sources":["D:/mywork/paralect/2021/src/actions/userActons.js"],"names":["axios","USER_INFO_FAIL","USER_INFO_REQUEST","USER_INFO_SUCCESS","infoUser","userName","dispatch","console","log","type","data","get","payload","error","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,iBAA5C,QAAqE,uBAArE;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAE/C,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAC,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP;AAAP,KAAD,CAAR;AACA,UAAM;AAACQ,MAAAA;AAAD,QAAS,MAAMV,KAAK,CAACW,GAAN,CAAW,gCAA+BN,QAAS,EAAnD,CAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEN,iBAAP;AAA0BS,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAAR;AACH,GAND,CAME,OAAOG,KAAP,EAAc;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAER,cAAP;AAAuBW,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAtC,KAAD,CAAR;AACH;AACJ,CAZD;;AAcA,SAAQV,QAAR","sourcesContent":["import axios from \"axios\"\r\nimport { USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\"\r\n\r\nconst infoUser = (userName) => async (dispatch) => {\r\n    \r\n    try {\r\n        console.log(userName)\r\n        dispatch({type: USER_INFO_REQUEST})\r\n        const {data} = await axios.get(`https://api.github.com/users/${userName}`)\r\n        console.log(data)\r\n        dispatch({type: USER_INFO_SUCCESS, payload: data})\r\n    } catch (error) {\r\n        console.log(11)\r\n        dispatch({type: USER_INFO_FAIL, payload: error.message})\r\n    }\r\n} \r\n\r\nexport {infoUser}"]},"metadata":{},"sourceType":"module"}