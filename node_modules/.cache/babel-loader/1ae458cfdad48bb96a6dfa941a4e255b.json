{"ast":null,"code":"import { REPOS_INFO_FAIL, REPOS_INFO_REQUEST, REPOS_INFO_SUCCESS, USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\";\n\nfunction userInfoReducer(state = {\n  user: {},\n  html_url: '',\n  avatar_url: '',\n  login: '',\n  name: '',\n  followers: 0,\n  following: 0,\n  repos: {},\n  public_repos: 0\n}, action) {\n  switch (action.type) {\n    case USER_INFO_REQUEST:\n      return {\n        loading: true\n      };\n\n    case USER_INFO_SUCCESS:\n      return {\n        loading: false,\n        html_url: action.payload.html_url,\n        login: action.payload.login,\n        name: action.payload.name,\n        followers: action.payload.followers,\n        following: action.payload.following,\n        avatar_url: action.payload.avatar_url,\n        repos: action.payload.repos,\n        user: action.payload,\n        public_repos: action.payload.public_repos\n      };\n\n    case USER_INFO_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction reposInfoReducer(state = {\n  repos: {}\n}, action) {\n  switch (action.type) {\n    case REPOS_INFO_REQUEST:\n      return {\n        reposLoading: true\n      };\n\n    case REPOS_INFO_SUCCESS:\n      return {\n        reposLoading: false,\n        reposRepos: action.payload.repos\n      };\n\n    case REPOS_INFO_FAIL:\n      return {\n        reposLoading: false,\n        reposError: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { userInfoReducer, reposInfoReducer };","map":{"version":3,"sources":["D:/mywork/paralect/2021/src/reducers/userInfoReducer.js"],"names":["REPOS_INFO_FAIL","REPOS_INFO_REQUEST","REPOS_INFO_SUCCESS","USER_INFO_FAIL","USER_INFO_REQUEST","USER_INFO_SUCCESS","userInfoReducer","state","user","html_url","avatar_url","login","name","followers","following","repos","public_repos","action","type","loading","payload","error","reposInfoReducer","reposLoading","reposRepos","reposError"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,cAAlE,EAAkFC,iBAAlF,EAAqGC,iBAArG,QAA8H,uBAA9H;;AAEA,SAASC,eAAT,CAAyBC,KAAK,GAAE;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,QAAQ,EAAE,EAAtB;AAA0BC,EAAAA,UAAU,EAAE,EAAtC;AAA0CC,EAAAA,KAAK,EAAE,EAAjD;AAAqDC,EAAAA,IAAI,EAAE,EAA3D;AAA+DC,EAAAA,SAAS,EAAE,CAA1E;AAA6EC,EAAAA,SAAS,EAAE,CAAxF;AAA2FC,EAAAA,KAAK,EAAE,EAAlG;AAAsGC,EAAAA,YAAY,EAAE;AAApH,CAAhC,EAAwJC,MAAxJ,EAAgK;AAC5J,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,iBAAL;AACI,aAAO;AAACe,QAAAA,OAAO,EAAE;AAAV,OAAP;;AACJ,SAAKd,iBAAL;AACI,aAAO;AACHc,QAAAA,OAAO,EAAE,KADN;AAEHV,QAAAA,QAAQ,EAAEQ,MAAM,CAACG,OAAP,CAAeX,QAFtB;AAGHE,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAHnB;AAIHC,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeR,IAJlB;AAKHC,QAAAA,SAAS,EAAEI,MAAM,CAACG,OAAP,CAAeP,SALvB;AAMHC,QAAAA,SAAS,EAAEG,MAAM,CAACG,OAAP,CAAeN,SANvB;AAOHJ,QAAAA,UAAU,EAAEO,MAAM,CAACG,OAAP,CAAeV,UAPxB;AAQHK,QAAAA,KAAK,EAAEE,MAAM,CAACG,OAAP,CAAeL,KARnB;AASHP,QAAAA,IAAI,EAAES,MAAM,CAACG,OATV;AAUHJ,QAAAA,YAAY,EAAEC,MAAM,CAACG,OAAP,CAAeJ;AAV1B,OAAP;;AAYJ,SAAKb,cAAL;AACI,aAAO;AAACgB,QAAAA,OAAO,EAAE,KAAV;AAAiBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAA/B,OAAP;;AACJ;AACI,aAAOb,KAAP;AAnBR;AAqBH;;AAED,SAASe,gBAAT,CAA0Bf,KAAK,GAAG;AAACQ,EAAAA,KAAK,EAAE;AAAR,CAAlC,EAA+CE,MAA/C,EAAuD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,kBAAL;AACI,aAAO;AAACsB,QAAAA,YAAY,EAAE;AAAf,OAAP;;AACJ,SAAKrB,kBAAL;AACI,aAAO;AAACqB,QAAAA,YAAY,EAAE,KAAf;AAAsBC,QAAAA,UAAU,EAAEP,MAAM,CAACG,OAAP,CAAeL;AAAjD,OAAP;;AACJ,SAAKf,eAAL;AACI,aAAO;AAACuB,QAAAA,YAAY,EAAE,KAAf;AAAsBE,QAAAA,UAAU,EAAER,MAAM,CAACG;AAAzC,OAAP;;AACJ;AACI,aAAOb,KAAP;AARR;AAUH;;AAED,SAAQD,eAAR,EAAwBgB,gBAAxB","sourcesContent":["import { REPOS_INFO_FAIL, REPOS_INFO_REQUEST, REPOS_INFO_SUCCESS, USER_INFO_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS } from \"../constants/userInfo\";\r\n\r\nfunction userInfoReducer(state= { user: {}, html_url: '', avatar_url: '', login: '', name: '', followers: 0, following: 0, repos: {}, public_repos: 0}, action) {\r\n    switch (action.type) {\r\n        case USER_INFO_REQUEST:\r\n            return {loading: true}\r\n        case USER_INFO_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                html_url: action.payload.html_url, \r\n                login: action.payload.login, \r\n                name: action.payload.name, \r\n                followers: action.payload.followers, \r\n                following: action.payload.following,\r\n                avatar_url: action.payload.avatar_url,\r\n                repos: action.payload.repos,\r\n                user: action.payload,\r\n                public_repos: action.payload.public_repos\r\n            }\r\n        case USER_INFO_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction reposInfoReducer(state = {repos: {}}, action) {\r\n    switch (action.type) {\r\n        case REPOS_INFO_REQUEST:\r\n            return {reposLoading: true}\r\n        case REPOS_INFO_SUCCESS:\r\n            return {reposLoading: false, reposRepos: action.payload.repos}\r\n        case REPOS_INFO_FAIL:\r\n            return {reposLoading: false, reposError: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {userInfoReducer,reposInfoReducer}"]},"metadata":{},"sourceType":"module"}